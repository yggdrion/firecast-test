name: 🐳 Build and Push

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code 🛎️
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure full git history
        run: |
          if git rev-parse --is-shallow-repository | grep true; then
            git fetch --prune --unshallow
          fi

      - name: Set up QEMU ⚡
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx 🛠️
        uses: docker/setup-buildx-action@v3

      - name: Install GitVersion 📦
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: "5.x"

      - name: Run GitVersion 🏷️
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.2.1
        with:
          useConfigFile: true
          configFilePath: ./GitVersion.yml
        working-directory: ${{ github.workspace }}

      - name: Echo GitVersion results
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semver }}"
          echo "Major:  ${{ steps.gitversion.outputs.major }}"
          echo "Minor:  ${{ steps.gitversion.outputs.minor }}"
          echo "Patch:  ${{ steps.gitversion.outputs.patch }}"

      - name: Log in to GHCR 🔑
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

          # docker buildx build --platform linux/amd64,linux/arm64 \
      - name: Build and push Docker image 🐳
        run: |
          docker buildx build --platform linux/amd64 \
            -t ghcr.io/${{ github.repository }}:${{ steps.gitversion.outputs.semver }} \
            -t ghcr.io/${{ github.repository }}:latest \
            --push \
            --cache-from=type=gha \
            --cache-to=type=gha,mode=max .

      - name: Create and push git tag 🏷️
        env:
          GIT_TAG: ${{ steps.gitversion.outputs.semver }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $GIT_TAG
          git push origin $GIT_TAG
